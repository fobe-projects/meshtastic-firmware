name: CI
concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
on:
  # # Triggers the workflow on push but only for the master branch
  push:
    branches:
      - workflow
      - develop
      - event/*
    paths-ignore:
      - "**.md"
      - version.properties

  # Note: This is different from "pull_request". Need to specify ref when doing checkouts.
  pull_request_target:
    branches:
      - workflow
      - develop
      - event/*
    paths-ignore:
      - "**.md"
      #- "**.yml"

  workflow_dispatch:

env:
  RUNS_ON_S3_BUCKET_CACHE: fobe-gars-cache
  RUNS_ON_AWS_REGION: cn-sounth-fobe-1
  AWS_ACCESS_KEY_ID: ${{ secrets.FOBE_GARS_S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.FOBE_GARS_S3_SECRET_KEY }}
  AWS_ENDPOINT_URL: "http://${{ secrets.FOBE_GARS_S3_ENDPOINT_HOST }}:${{ secrets.FOBE_GARS_S3_ENDPOINT_PORT }}"
  RUNS_ON_S3_FORCE_PATH_STYLE: "true"

jobs:
  setup:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - esp32
          - esp32s3
          - esp32c3
          - esp32c6
          - nrf52840
          - rp2040
          - rp2350
          - stm32
          - check
    runs-on: self-hosted
    steps:
      - name: Fix workspace permissions
        shell: bash
        run: |
          sudo chown -R $(id -u):$(id -g) $GITHUB_WORKSPACE
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - run: pip install -U platformio
      - name: Generate matrix
        id: jsonStep
        run: |
          if [[ "$GITHUB_HEAD_REF" == "" ]]; then
            TARGETS=$(./bin/generate_ci_matrix.py ${{matrix.arch}})
          else
            TARGETS=$(./bin/generate_ci_matrix.py ${{matrix.arch}} pr)
          fi
          echo "Name: $GITHUB_REF_NAME Base: $GITHUB_BASE_REF Ref: $GITHUB_REF Targets: $TARGETS"
          echo "${{matrix.arch}}=$(jq -cn --argjson environments "$TARGETS" '{board: $environments}')" >> $GITHUB_OUTPUT
    outputs:
      esp32: ${{ steps.jsonStep.outputs.esp32 }}
      esp32s3: ${{ steps.jsonStep.outputs.esp32s3 }}
      esp32c3: ${{ steps.jsonStep.outputs.esp32c3 }}
      esp32c6: ${{ steps.jsonStep.outputs.esp32c6 }}
      nrf52840: ${{ steps.jsonStep.outputs.nrf52840 }}
      rp2040: ${{ steps.jsonStep.outputs.rp2040 }}
      rp2350: ${{ steps.jsonStep.outputs.rp2350 }}
      stm32: ${{ steps.jsonStep.outputs.stm32 }}
      check: ${{ steps.jsonStep.outputs.check }}

  version:
    runs-on: self-hosted
    steps:
      - name: Fix workspace permissions
        shell: bash
        run: |
          sudo chown -R $(id -u):$(id -g) $GITHUB_WORKSPACE
      - uses: actions/checkout@v5
      - name: Get release version string
        run: |
          echo "long=$(./bin/buildinfo.py long)" >> $GITHUB_OUTPUT
          echo "deb=$(./bin/buildinfo.py deb)" >> $GITHUB_OUTPUT
        id: version
        env:
          BUILD_LOCATION: local
    outputs:
      long: ${{ steps.version.outputs.long }}
      deb: ${{ steps.version.outputs.deb }}

  # check:
  #   needs: setup
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJson(needs.setup.outputs.check) }}

  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name != 'workflow_dispatch' }}
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Build base
  #       id: base
  #       uses: ./.github/actions/setup-base
  #     - name: Check ${{ matrix.board }}
  #       run: bin/check-all.sh ${{ matrix.board }}

  build-esp32:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.esp32) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: esp32

  build-esp32s3:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.esp32s3) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: esp32s3

  build-esp32c3:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.esp32c3) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: esp32c3

  build-esp32c6:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.esp32c6) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: esp32c6

  build-nrf52840:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.nrf52840) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: nrf52840

  build-rp2040:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.rp2040) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: rp2040

  build-rp2350:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.rp2350) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: rp2350

  build-stm32:
    needs: [setup, version]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stm32) }}
    uses: ./.github/workflows/build_firmware.yml
    secrets: inherit
    with:
      version: ${{ needs.version.outputs.long }}
      pio_env: ${{ matrix.board }}
      platform: stm32

  gather-artifacts:
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        arch:
          - esp32
          - esp32s3
          - esp32c3
          - esp32c6
          - nrf52840
          - rp2040
          - rp2350
          - stm32
    runs-on: self-hosted
    needs:
      [
        version,
        build-esp32,
        build-esp32s3,
        build-esp32c3,
        build-esp32c6,
        build-nrf52840,
        build-rp2040,
        build-rp2350,
        build-stm32,
      ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - uses: actions/download-artifact@v5
        with:
          path: ./
          pattern: firmware-${{matrix.arch}}-*
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R

      - name: Move files up
        run: mv -b -t ./ ./bin/device-*.sh ./bin/device-*.bat

      - name: Repackage in single firmware zip
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{matrix.arch}}-${{ needs.version.outputs.long }}
          overwrite: true
          path: |
            ./firmware-*.bin
            ./firmware-*.uf2
            ./firmware-*.hex
            ./firmware-*-ota.zip
            ./device-*.sh
            ./device-*.bat
            ./littlefs-*.bin
            ./bleota*bin
            ./Meshtastic_nRF52_factory_erase*.uf2
          retention-days: 30

      - uses: actions/download-artifact@v5
        with:
          name: firmware-${{matrix.arch}}-${{ needs.version.outputs.long }}
          merge-multiple: true
          path: ./output

      # For diagnostics
      - name: Show artifacts
        run: ls -lR

      - name: Device scripts permissions
        run: |
          chmod +x ./output/device-install.sh
          chmod +x ./output/device-update.sh

      - name: Zip firmware
        run: zip -j -9 -r ./firmware-${{matrix.arch}}-${{ needs.version.outputs.long }}.zip ./output

      - name: Repackage in single elfs zip
        uses: actions/upload-artifact@v4
        with:
          name: debug-elfs-${{matrix.arch}}-${{ needs.version.outputs.long }}.zip
          overwrite: true
          path: ./*.elf
          retention-days: 30

      - uses: scruplelesswizard/comment-artifact@main
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: firmware-${{matrix.arch}}-${{ needs.version.outputs.long }}
          description: "Download firmware-${{matrix.arch}}-${{ needs.version.outputs.long }}.zip. This artifact will be available for 90 days from creation"
          github-token: ${{ secrets.GITHUB_TOKEN }}
