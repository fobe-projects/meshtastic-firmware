name: Setup MinIO Client Composite Action
description: Install and restore Python dependencies using S3 cache

inputs:
  version:
    description: MinIO client version (e.g. RELEASE.2024-06-13T21-47-55Z)
    required: false
    default: RELEASE.2025-07-21T05-28-08Z

runs:
  using: composite
  steps:
    - name: Setup MinIO Client
      shell: bash
      run: |
        MC_VERSION="${{ inputs.version }}"
        OS=$(uname -s | tr '[:upper:]' '[:lower:]')
        ARCH=$(uname -m)

        case "$ARCH" in
          x86_64)   ARCH=amd64 ;;
          aarch64)  ARCH=arm64 ;;
          *) echo "Unsupported architecture: $ARCH" && exit 1 ;;
        esac

        case "$OS" in
          linux)   URL="https://dl.min.io/client/mc/release/linux-${ARCH}/archive/mc.${MC_VERSION}" ;;
          darwin)  URL="https://dl.min.io/client/mc/release/darwin-${ARCH}/archive/mc.${MC_VERSION}" ;;
          *) echo "Unsupported OS: $OS" && exit 1 ;;
        esac

        echo "MinIO client version: $MC_VERSION"
        echo "MinIO client URL: $URL"

        TOOL_DIR="${RUNNER_TOOL_CACHE:-$HOME/_work/_tool}/MinIO/${MC_VERSION}"
        mkdir -p "$TOOL_DIR"

        if [ ! -f "$TOOL_DIR/mc" ]; then
          echo "Downloading MinIO client from $URL to $TOOL_DIR"
          curl -sSL "$URL" -o "$TOOL_DIR/mc"
          chmod +x "$TOOL_DIR/mc"
        else
          echo "MinIO client already exists at $TOOL_DIR/mc, skipping download."
        fi
        echo "$TOOL_DIR" >> $GITHUB_PATH
